{"ast":null,"code":"var _jsxFileName = \"/Users/tagami/Downloads/quiz-app/src/QuizApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport quizData from './quizData.json';\nimport './styles.css';\n\n// 選択肢をランダムに並べ替える関数\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  return array.sort(() => 0.5 - Math.random());\n}\n\n// 全カテゴリーから問題を取得する関数\nfunction getAllQuestions() {\n  const allQuestions = [];\n  Object.entries(quizData.categories).forEach(([categoryKey, category]) => {\n    const questionsWithMeta = category.questions.map(q => ({\n      ...q,\n      categoryName: category.name\n    }));\n    allQuestions.push(...questionsWithMeta);\n  });\n  return shuffleArray(allQuestions).slice(0, 30);\n}\n\n// ランキングをサーバーに保存する関数\nconst saveScoreToServer = async scoreData => {\n  try {\n    const response = await fetch('http://localhost:3001/api/rankings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(scoreData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング保存エラー:', error);\n    return null;\n  }\n};\n\n// ランキングをサーバーから取得する関数\nconst fetchRankings = async mode => {\n  try {\n    const response = await fetch(`http://localhost:3001/api/rankings/${mode}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング取得エラー:', error);\n    return [];\n  }\n};\nfunction QuizApp() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [feedback, setFeedback] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isQuizKingMode, setIsQuizKingMode] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showRanking, setShowRanking] = useState(false);\n  const [rankings, setRankings] = useState({\n    normal: [],\n    quizKing: []\n  });\n  const [answerHistory, setAnswerHistory] = useState([]);\n\n  // カテゴリーが選択されたときに問題を設定\n  useEffect(() => {\n    if (selectedCategory && quizData.categories[selectedCategory]) {\n      try {\n        const categoryQuestions = quizData.categories[selectedCategory].questions;\n        if (categoryQuestions && categoryQuestions.length > 0) {\n          const shuffledQuestions = shuffleArray([...categoryQuestions]).slice(0, 10);\n          setQuestions(shuffledQuestions);\n          setCurrentQuestionIndex(0);\n          setScore(0);\n          setShowScore(false);\n          setFeedback(null);\n          setIsAnswered(false);\n          setIsQuizKingMode(false);\n        } else {\n          console.error('選択されたカテゴリーに問題がありません');\n        }\n      } catch (error) {\n        console.error('問題データの読み込みエラー:', error);\n      }\n    }\n  }, [selectedCategory]);\n\n  // ランキングデータを読み込む\n  useEffect(() => {\n    const loadRankings = async () => {\n      const normalRankings = await fetchRankings('normal');\n      const quizKingRankings = await fetchRankings('quizKing');\n      setRankings({\n        normal: normalRankings,\n        quizKing: quizKingRankings\n      });\n    };\n    loadRankings();\n  }, [showRanking]);\n\n  // スコアを保存する関数\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n    const scoreData = {\n      name: playerName,\n      score: score,\n      total: questions.length,\n      category: isQuizKingMode ? 'クイズ王チャレンジ' : quizData.categories[selectedCategory].name,\n      mode: isQuizKingMode ? 'quizKing' : 'normal'\n    };\n    const result = await saveScoreToServer(scoreData);\n    if (result) {\n      const updatedRankings = await fetchRankings(isQuizKingMode ? 'quizKing' : 'normal');\n      setRankings(prev => ({\n        ...prev,\n        [isQuizKingMode ? 'quizKing' : 'normal']: updatedRankings\n      }));\n      setShowRanking(true);\n    }\n  };\n\n  // クイズ王チャレンジモード開始\n  const startQuizKingChallenge = () => {\n    const allQuestions = getAllQuestions();\n    setQuestions(allQuestions);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(true);\n  };\n\n  // 問題が切り替わるたびに選択肢の順序をシャッフル\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const currentQuestion = questions[currentQuestionIndex];\n      if (currentQuestion && currentQuestion.correct && currentQuestion.distractors) {\n        const allOptions = shuffleArray([currentQuestion.correct, ...currentQuestion.distractors]);\n        setOptions(allOptions);\n        setFeedback(null);\n        setIsAnswered(false);\n      }\n    }\n  }, [currentQuestionIndex, questions]);\n\n  // 回答ボタンをクリックしたときの処理\n  const handleAnswerOptionClick = selectedOption => {\n    if (!questions[currentQuestionIndex] || isAnswered) return;\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = selectedOption === currentQuestion.correct;\n\n    // 回答履歴に追加\n    const newAnswer = {\n      questionNumber: currentQuestionIndex + 1,\n      question: currentQuestion.question,\n      selectedAnswer: selectedOption,\n      correctAnswer: currentQuestion.correct,\n      isCorrect: isCorrect,\n      category: isQuizKingMode ? currentQuestion.categoryName : quizData.categories[selectedCategory].name\n    };\n    setAnswerHistory(prev => [...prev, newAnswer]);\n    if (isCorrect) {\n      setScore(prevScore => prevScore + 1);\n      setFeedback({\n        isCorrect: true,\n        message: '正解！'\n      });\n    } else {\n      setFeedback({\n        isCorrect: false,\n        message: `不正解... 正解は「${currentQuestion.correct}」です。`\n      });\n    }\n    setIsAnswered(true);\n  };\n\n  // 次の問題へ進む\n  const handleNextQuestion = () => {\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  // カテゴリー選択画面に戻る\n  const handleBackToCategorySelect = () => {\n    setSelectedCategory(null);\n    setQuestions([]);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(false);\n    setShowRanking(false);\n    setAnswerHistory([]);\n  };\n\n  // カテゴリー選択画面\n  if (!selectedCategory && !isQuizKingMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30AF\\u30A4\\u30BA\\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-king-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u30AF\\u30A4\\u30BA\\u738B\\u30C1\\u30E3\\u30EC\\u30F3\\u30B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u5168\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u304B\\u308930\\u554F\\u306E\\u30E9\\u30F3\\u30C0\\u30E0\\u554F\\u984C\\u306B\\u6311\\u6226\\uFF01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startQuizKingChallenge,\n            className: \"quiz-king-button\",\n            children: \"\\u30AF\\u30A4\\u30BA\\u738B\\u306B\\u6311\\u6226\\u3059\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-grid\",\n            children: Object.entries(quizData.categories).map(([key, category]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedCategory(key),\n              className: \"category-button\",\n              children: category.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n  // データが読み込まれていない場合のローディング表示\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u554F\\u984C\\u3092\\u8AAD\\u307F\\u8FBC\\u3093\\u3067\\u3044\\u307E\\u3059...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n\n  // クイズ画面\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u30AF\\u30A4\\u30BA\", isQuizKingMode ? \"王チャレンジ\" : \"\", \"\\u7D42\\u4E86\\uFF01\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-text\",\n        children: [\"\\u3042\\u306A\\u305F\\u306E\\u30B9\\u30B3\\u30A2\\u306F \", score, \" / \", questions.length, \" \\u3067\\u3059\", isQuizKingMode && score >= 25 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-king-achievement\",\n          children: \"\\uD83C\\uDFC6 \\u304A\\u3081\\u3067\\u3068\\u3046\\uFF01\\u3042\\u306A\\u305F\\u306F\\u30AF\\u30A4\\u30BA\\u738B\\u306E\\u79F0\\u53F7\\u3092\\u7372\\u5F97\\u3057\\u307E\\u3057\\u305F\\uFF01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-history-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u56DE\\u7B54\\u5C65\\u6B74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-history-list\",\n          children: answerHistory.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `answer-history-item ${answer.isCorrect ? 'correct' : 'incorrect'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-history-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-number\",\n                children: [\"\\u554F\\u984C \", answer.questionNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"category-level\",\n                children: answer.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question\",\n              children: answer.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-answer\",\n                children: [\"\\u3042\\u306A\\u305F\\u306E\\u56DE\\u7B54: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: answer.isCorrect ? 'correct-text' : 'incorrect-text',\n                  children: answer.selectedAnswer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), !answer.isCorrect && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"correct-answer\",\n                children: [\"\\u6B63\\u89E3: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"correct-text\",\n                  children: answer.correctAnswer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), !showRanking ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u3042\\u306A\\u305F\\u306E\\u540D\\u524D\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          className: \"name-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveScore,\n          className: \"save-score-button\",\n          disabled: !playerName.trim(),\n          children: \"\\u30B9\\u30B3\\u30A2\\u3092\\u4FDD\\u5B58\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ranking-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u30E9\\u30F3\\u30AD\\u30F3\\u30B0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ranking-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `ranking-tab ${!isQuizKingMode ? 'active' : ''}`,\n            onClick: () => setIsQuizKingMode(false),\n            children: \"\\u901A\\u5E38\\u30E2\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `ranking-tab ${isQuizKingMode ? 'active' : ''}`,\n            onClick: () => setIsQuizKingMode(true),\n            children: \"\\u30AF\\u30A4\\u30BA\\u738B\\u30E2\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ranking-list\",\n          children: [rankings[isQuizKingMode ? 'quizKing' : 'normal'].map((rank, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ranking-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rank-number\",\n              children: [\"#\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-name\",\n              children: rank.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-score\",\n              children: [rank.score, \"/\", rank.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rank-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: rank.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: rank.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }, this)), rankings[isQuizKingMode ? 'quizKing' : 'normal'].length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-ranking\",\n            children: \"\\u307E\\u3060\\u30E9\\u30F3\\u30AD\\u30F3\\u30B0\\u30C7\\u30FC\\u30BF\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToCategorySelect,\n          className: \"back-button\",\n          children: [isQuizKingMode ? \"トップ画面\" : \"カテゴリー選択\", \"\\u306B\\u623B\\u308B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u8CEA\\u554F \", currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), \"/\", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-name\",\n            children: isQuizKingMode ? questions[currentQuestionIndex].categoryName : quizData.categories[selectedCategory].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `feedback ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n          children: feedback.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(option),\n          className: `answer-button ${isAnswered ? option === questions[currentQuestionIndex].correct ? 'correct' : 'incorrect' : ''}`,\n          disabled: isAnswered,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), isAnswered && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          className: \"next-button\",\n          children: currentQuestionIndex === questions.length - 1 ? '結果を見る' : '次の問題へ'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizApp, \"wxnQeSamawp1ApGD9vwrDH0tZbU=\");\n_c = QuizApp;\nexport default QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["React","useState","useEffect","quizData","jsxDEV","_jsxDEV","Fragment","_Fragment","shuffleArray","array","sort","Math","random","getAllQuestions","allQuestions","Object","entries","categories","forEach","categoryKey","category","questionsWithMeta","questions","map","q","categoryName","name","push","slice","saveScoreToServer","scoreData","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","fetchRankings","mode","QuizApp","_s","selectedCategory","setSelectedCategory","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","options","setOptions","setQuestions","feedback","setFeedback","isAnswered","setIsAnswered","isQuizKingMode","setIsQuizKingMode","playerName","setPlayerName","showRanking","setShowRanking","rankings","setRankings","normal","quizKing","answerHistory","setAnswerHistory","categoryQuestions","length","shuffledQuestions","loadRankings","normalRankings","quizKingRankings","saveScore","trim","total","result","updatedRankings","prev","startQuizKingChallenge","currentQuestion","correct","distractors","allOptions","handleAnswerOptionClick","selectedOption","isCorrect","newAnswer","questionNumber","question","selectedAnswer","correctAnswer","prevScore","message","handleNextQuestion","nextQuestion","handleBackToCategorySelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","key","answer","index","type","placeholder","value","onChange","e","target","disabled","rank","date","option","_c","$RefreshReg$"],"sources":["/Users/tagami/Downloads/quiz-app/src/QuizApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport quizData from './quizData.json';\nimport './styles.css';\n\n// 選択肢をランダムに並べ替える関数\nfunction shuffleArray(array) {\n  return array.sort(() => 0.5 - Math.random());\n}\n\n// 全カテゴリーから問題を取得する関数\nfunction getAllQuestions() {\n  const allQuestions = [];\n  Object.entries(quizData.categories).forEach(([categoryKey, category]) => {\n    const questionsWithMeta = category.questions.map(q => ({\n      ...q,\n      categoryName: category.name\n    }));\n    allQuestions.push(...questionsWithMeta);\n  });\n  return shuffleArray(allQuestions).slice(0, 30);\n}\n\n// ランキングをサーバーに保存する関数\nconst saveScoreToServer = async (scoreData) => {\n  try {\n    const response = await fetch('http://localhost:3001/api/rankings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(scoreData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング保存エラー:', error);\n    return null;\n  }\n};\n\n// ランキングをサーバーから取得する関数\nconst fetchRankings = async (mode) => {\n  try {\n    const response = await fetch(`http://localhost:3001/api/rankings/${mode}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング取得エラー:', error);\n    return [];\n  }\n};\n\nfunction QuizApp() {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [feedback, setFeedback] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isQuizKingMode, setIsQuizKingMode] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showRanking, setShowRanking] = useState(false);\n  const [rankings, setRankings] = useState({\n    normal: [],\n    quizKing: []\n  });\n  const [answerHistory, setAnswerHistory] = useState([]);\n\n  // カテゴリーが選択されたときに問題を設定\n  useEffect(() => {\n    if (selectedCategory && quizData.categories[selectedCategory]) {\n      try {\n        const categoryQuestions = quizData.categories[selectedCategory].questions;\n        if (categoryQuestions && categoryQuestions.length > 0) {\n          const shuffledQuestions = shuffleArray([...categoryQuestions]).slice(0, 10);\n          setQuestions(shuffledQuestions);\n          setCurrentQuestionIndex(0);\n          setScore(0);\n          setShowScore(false);\n          setFeedback(null);\n          setIsAnswered(false);\n          setIsQuizKingMode(false);\n        } else {\n          console.error('選択されたカテゴリーに問題がありません');\n        }\n      } catch (error) {\n        console.error('問題データの読み込みエラー:', error);\n      }\n    }\n  }, [selectedCategory]);\n\n  // ランキングデータを読み込む\n  useEffect(() => {\n    const loadRankings = async () => {\n      const normalRankings = await fetchRankings('normal');\n      const quizKingRankings = await fetchRankings('quizKing');\n      setRankings({\n        normal: normalRankings,\n        quizKing: quizKingRankings\n      });\n    };\n    loadRankings();\n  }, [showRanking]);\n\n  // スコアを保存する関数\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n\n    const scoreData = {\n      name: playerName,\n      score: score,\n      total: questions.length,\n      category: isQuizKingMode ? 'クイズ王チャレンジ' : quizData.categories[selectedCategory].name,\n      mode: isQuizKingMode ? 'quizKing' : 'normal'\n    };\n\n    const result = await saveScoreToServer(scoreData);\n    if (result) {\n      const updatedRankings = await fetchRankings(isQuizKingMode ? 'quizKing' : 'normal');\n      setRankings(prev => ({\n        ...prev,\n        [isQuizKingMode ? 'quizKing' : 'normal']: updatedRankings\n      }));\n      setShowRanking(true);\n    }\n  };\n\n  // クイズ王チャレンジモード開始\n  const startQuizKingChallenge = () => {\n    const allQuestions = getAllQuestions();\n    setQuestions(allQuestions);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(true);\n  };\n\n  // 問題が切り替わるたびに選択肢の順序をシャッフル\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const currentQuestion = questions[currentQuestionIndex];\n      if (currentQuestion && currentQuestion.correct && currentQuestion.distractors) {\n        const allOptions = shuffleArray([currentQuestion.correct, ...currentQuestion.distractors]);\n        setOptions(allOptions);\n        setFeedback(null);\n        setIsAnswered(false);\n      }\n    }\n  }, [currentQuestionIndex, questions]);\n\n  // 回答ボタンをクリックしたときの処理\n  const handleAnswerOptionClick = (selectedOption) => {\n    if (!questions[currentQuestionIndex] || isAnswered) return;\n\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = selectedOption === currentQuestion.correct;\n    \n    // 回答履歴に追加\n    const newAnswer = {\n      questionNumber: currentQuestionIndex + 1,\n      question: currentQuestion.question,\n      selectedAnswer: selectedOption,\n      correctAnswer: currentQuestion.correct,\n      isCorrect: isCorrect,\n      category: isQuizKingMode ? currentQuestion.categoryName : quizData.categories[selectedCategory].name\n    };\n    setAnswerHistory(prev => [...prev, newAnswer]);\n    \n    if (isCorrect) {\n      setScore(prevScore => prevScore + 1);\n      setFeedback({\n        isCorrect: true,\n        message: '正解！'\n      });\n    } else {\n      setFeedback({\n        isCorrect: false,\n        message: `不正解... 正解は「${currentQuestion.correct}」です。`\n      });\n    }\n    setIsAnswered(true);\n  };\n\n  // 次の問題へ進む\n  const handleNextQuestion = () => {\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  // カテゴリー選択画面に戻る\n  const handleBackToCategorySelect = () => {\n    setSelectedCategory(null);\n    setQuestions([]);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(false);\n    setShowRanking(false);\n    setAnswerHistory([]);\n  };\n\n  // カテゴリー選択画面\n  if (!selectedCategory && !isQuizKingMode) {\n    return (\n      <div className=\"app\">\n        <h1>クイズアプリ</h1>\n        <div className=\"category-selection\">\n          <div className=\"quiz-king-section\">\n            <h2>クイズ王チャレンジ</h2>\n            <p>全カテゴリーから30問のランダム問題に挑戦！</p>\n            <button\n              onClick={startQuizKingChallenge}\n              className=\"quiz-king-button\"\n            >\n              クイズ王に挑戦する\n            </button>\n          </div>\n          <div className=\"category-section\">\n            <h2>カテゴリーを選択してください</h2>\n            <div className=\"category-grid\">\n              {Object.entries(quizData.categories).map(([key, category]) => (\n                <button\n                  key={key}\n                  onClick={() => setSelectedCategory(key)}\n                  className=\"category-button\"\n                >\n                  {category.name}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // データが読み込まれていない場合のローディング表示\n  if (questions.length === 0) {\n    return (\n      <div className=\"app\">\n        <div className=\"loading\">\n          <h2>問題を読み込んでいます...</h2>\n        </div>\n      </div>\n    );\n  }\n\n  // クイズ画面\n  return (\n    <div className=\"app\">\n      {showScore ? (\n        <div className=\"score-section\">\n          <h2>クイズ{isQuizKingMode ? \"王チャレンジ\" : \"\"}終了！</h2>\n          <div className=\"score-text\">\n            あなたのスコアは {score} / {questions.length} です\n            {isQuizKingMode && score >= 25 && (\n              <div className=\"quiz-king-achievement\">\n                🏆 おめでとう！あなたはクイズ王の称号を獲得しました！\n              </div>\n            )}\n          </div>\n          \n          <div className=\"answer-history-section\">\n            <h3>回答履歴</h3>\n            <div className=\"answer-history-list\">\n              {answerHistory.map((answer, index) => (\n                <div key={index} className={`answer-history-item ${answer.isCorrect ? 'correct' : 'incorrect'}`}>\n                  <div className=\"answer-history-header\">\n                    <span className=\"question-number\">問題 {answer.questionNumber}</span>\n                    <span className=\"category-level\">{answer.category}</span>\n                  </div>\n                  <div className=\"question\">{answer.question}</div>\n                  <div className=\"answer-details\">\n                    <div className=\"selected-answer\">\n                      あなたの回答: <span className={answer.isCorrect ? 'correct-text' : 'incorrect-text'}>\n                        {answer.selectedAnswer}\n                      </span>\n                    </div>\n                    {!answer.isCorrect && (\n                      <div className=\"correct-answer\">\n                        正解: <span className=\"correct-text\">{answer.correctAnswer}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {!showRanking ? (\n            <div className=\"name-input-section\">\n              <input\n                type=\"text\"\n                placeholder=\"あなたの名前を入力してください\"\n                value={playerName}\n                onChange={(e) => setPlayerName(e.target.value)}\n                className=\"name-input\"\n              />\n              <button\n                onClick={saveScore}\n                className=\"save-score-button\"\n                disabled={!playerName.trim()}\n              >\n                スコアを保存\n              </button>\n            </div>\n          ) : (\n            <div className=\"ranking-section\">\n              <h3>ランキング</h3>\n              <div className=\"ranking-tabs\">\n                <button\n                  className={`ranking-tab ${!isQuizKingMode ? 'active' : ''}`}\n                  onClick={() => setIsQuizKingMode(false)}\n                >\n                  通常モード\n                </button>\n                <button\n                  className={`ranking-tab ${isQuizKingMode ? 'active' : ''}`}\n                  onClick={() => setIsQuizKingMode(true)}\n                >\n                  クイズ王モード\n                </button>\n              </div>\n              <div className=\"ranking-list\">\n                {rankings[isQuizKingMode ? 'quizKing' : 'normal'].map((rank, index) => (\n                  <div key={index} className=\"ranking-item\">\n                    <span className=\"rank-number\">#{index + 1}</span>\n                    <span className=\"player-name\">{rank.name}</span>\n                    <span className=\"player-score\">{rank.score}/{rank.total}</span>\n                    <div className=\"rank-details\">\n                      <span>{rank.category}</span>\n                      <span>{rank.date}</span>\n                    </div>\n                  </div>\n                ))}\n                {rankings[isQuizKingMode ? 'quizKing' : 'normal'].length === 0 && (\n                  <div className=\"no-ranking\">\n                    まだランキングデータがありません\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          <div className=\"button-group\">\n            <button\n              onClick={handleBackToCategorySelect}\n              className=\"back-button\"\n            >\n              {isQuizKingMode ? \"トップ画面\" : \"カテゴリー選択\"}に戻る\n            </button>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-header\">\n              <div className=\"question-count\">\n                <span>質問 {currentQuestionIndex + 1}</span>/{questions.length}\n              </div>\n              <div className=\"category-name\">\n                {isQuizKingMode ? \n                  questions[currentQuestionIndex].categoryName :\n                  quizData.categories[selectedCategory].name\n                }\n              </div>\n            </div>\n            <div className=\"question-text\">\n              {questions[currentQuestionIndex].question}\n            </div>\n            {feedback && (\n              <div className={`feedback ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n                {feedback.message}\n              </div>\n            )}\n          </div>\n          <div className=\"answer-section\">\n            {options.map((option, index) => (\n              <button \n                key={index} \n                onClick={() => handleAnswerOptionClick(option)}\n                className={`answer-button ${\n                  isAnswered\n                    ? option === questions[currentQuestionIndex].correct\n                      ? 'correct'\n                      : 'incorrect'\n                    : ''\n                }`}\n                disabled={isAnswered}\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n          {isAnswered && (\n            <div className=\"next-button-container\">\n              <button \n                onClick={handleNextQuestion}\n                className=\"next-button\"\n              >\n                {currentQuestionIndex === questions.length - 1 ? '結果を見る' : '次の問題へ'}\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default QuizApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}