{"ast":null,"code":"var _jsxFileName = \"/Users/tagami/Downloads/quiz-app/src/QuizApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport quizData from './quizData.json';\nimport './styles.css';\n\n// 選択肢をランダムに並べ替える関数\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  return array.sort(() => 0.5 - Math.random());\n}\n\n// 全カテゴリーから問題を取得する関数\nfunction getAllQuestions() {\n  const allQuestions = [];\n  Object.entries(quizData.categories).forEach(([categoryKey, category]) => {\n    Object.entries(category.subcategories).forEach(([subcategoryKey, subcategory]) => {\n      const questionsWithMeta = subcategory.questions.map(q => ({\n        ...q,\n        categoryName: category.name,\n        subcategoryName: subcategory.name\n      }));\n      allQuestions.push(...questionsWithMeta);\n    });\n  });\n  return shuffleArray(allQuestions).slice(0, 30);\n}\n\n// ランキングをサーバーに保存する関数\nconst saveScoreToServer = async scoreData => {\n  try {\n    const response = await fetch('http://localhost:3001/api/rankings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(scoreData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング保存エラー:', error);\n    return null;\n  }\n};\n\n// ランキングをサーバーから取得する関数\nconst fetchRankings = async mode => {\n  try {\n    const response = await fetch(`http://localhost:3001/api/rankings/${mode}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング取得エラー:', error);\n    return [];\n  }\n};\nfunction QuizApp() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [feedback, setFeedback] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isQuizKingMode, setIsQuizKingMode] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showRanking, setShowRanking] = useState(false);\n  const [rankings, setRankings] = useState({\n    normal: [],\n    quizKing: []\n  });\n  const [answerHistory, setAnswerHistory] = useState([]);\n  const [answerStats, setAnswerStats] = useState({});\n\n  // サブカテゴリーが選択されたときに問題を設定\n  useEffect(() => {\n    var _quizData$categories$;\n    if (selectedCategory && selectedSubcategory && (_quizData$categories$ = quizData.categories[selectedCategory]) !== null && _quizData$categories$ !== void 0 && _quizData$categories$.subcategories[selectedSubcategory]) {\n      try {\n        const subcategoryQuestions = quizData.categories[selectedCategory].subcategories[selectedSubcategory].questions;\n        if (subcategoryQuestions && subcategoryQuestions.length > 0) {\n          const shuffledQuestions = shuffleArray([...subcategoryQuestions]).slice(0, 10);\n          setQuestions(shuffledQuestions);\n          setCurrentQuestionIndex(0);\n          setScore(0);\n          setShowScore(false);\n          setFeedback(null);\n          setIsAnswered(false);\n          setIsQuizKingMode(false);\n        } else {\n          console.error('選択されたサブカテゴリーに問題がありません');\n        }\n      } catch (error) {\n        console.error('問題データの読み込みエラー:', error);\n      }\n    }\n  }, [selectedCategory, selectedSubcategory]);\n\n  // ランキングデータを読み込む\n  useEffect(() => {\n    const loadRankings = async () => {\n      const normalRankings = await fetchRankings('normal');\n      const quizKingRankings = await fetchRankings('quizKing');\n      setRankings({\n        normal: normalRankings,\n        quizKing: quizKingRankings\n      });\n    };\n    loadRankings();\n  }, [showRanking]);\n\n  // 問題の正答率を取得\n  const fetchAnswerStats = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/answer-stats');\n      const data = await response.json();\n      const statsMap = {};\n      data.forEach(stat => {\n        statsMap[stat.question_text] = {\n          total: stat.total_attempts,\n          correct: stat.correct_attempts,\n          percentage: stat.correct_percentage\n        };\n      });\n      setAnswerStats(statsMap);\n    } catch (error) {\n      console.error('正答率取得エラー:', error);\n    }\n  };\n\n  // コンポーネントマウント時に正答率を取得\n  useEffect(() => {\n    fetchAnswerStats();\n  }, []);\n\n  // 回答データを保存\n  const saveAnswerStat = async (question, isCorrect) => {\n    try {\n      await fetch('http://localhost:3001/api/answer-stats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          category: isQuizKingMode ? questions[currentQuestionIndex].categoryName : quizData.categories[selectedCategory].name,\n          subcategory: questions[currentQuestionIndex].subcategoryName,\n          question: question,\n          isCorrect: isCorrect\n        })\n      });\n      // 正答率を再取得\n      fetchAnswerStats();\n    } catch (error) {\n      console.error('回答統計保存エラー:', error);\n    }\n  };\n\n  // スコアを保存する関数\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n    const scoreData = {\n      name: playerName,\n      score: score,\n      total: questions.length,\n      category: isQuizKingMode ? 'クイズ王チャレンジ' : quizData.categories[selectedCategory].name,\n      mode: isQuizKingMode ? 'quizKing' : 'normal'\n    };\n    const result = await saveScoreToServer(scoreData);\n    if (result) {\n      const updatedRankings = await fetchRankings(isQuizKingMode ? 'quizKing' : 'normal');\n      setRankings(prev => ({\n        ...prev,\n        [isQuizKingMode ? 'quizKing' : 'normal']: updatedRankings\n      }));\n      setShowRanking(true);\n    }\n  };\n\n  // クイズ王チャレンジモード開始\n  const startQuizKingChallenge = () => {\n    const allQuestions = getAllQuestions();\n    setQuestions(allQuestions);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(true);\n  };\n\n  // 問題が切り替わるたびに選択肢の順序をシャッフル\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const currentQuestion = questions[currentQuestionIndex];\n      if (currentQuestion && currentQuestion.correct && currentQuestion.distractors) {\n        const allOptions = shuffleArray([currentQuestion.correct, ...currentQuestion.distractors]);\n        setOptions(allOptions);\n        setFeedback(null);\n        setIsAnswered(false);\n      }\n    }\n  }, [currentQuestionIndex, questions]);\n\n  // 回答ボタンをクリックしたときの処理\n  const handleAnswerOptionClick = async selectedOption => {\n    if (!questions[currentQuestionIndex] || isAnswered) return;\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = selectedOption === currentQuestion.correct;\n\n    // 回答データを保存\n    await saveAnswerStat(currentQuestion.question, isCorrect);\n\n    // 回答履歴に追加\n    const newAnswer = {\n      questionNumber: currentQuestionIndex + 1,\n      question: currentQuestion.question,\n      selectedAnswer: selectedOption,\n      correctAnswer: currentQuestion.correct,\n      isCorrect: isCorrect,\n      category: isQuizKingMode ? currentQuestion.categoryName : quizData.categories[selectedCategory].name,\n      subcategoryName: currentQuestion.subcategoryName\n    };\n    setAnswerHistory(prev => [...prev, newAnswer]);\n    if (isCorrect) {\n      setScore(prevScore => prevScore + 1);\n      setFeedback({\n        isCorrect: true,\n        message: '正解！'\n      });\n    } else {\n      setFeedback({\n        isCorrect: false,\n        message: `不正解... 正解は「${currentQuestion.correct}」です。`\n      });\n    }\n    setIsAnswered(true);\n  };\n\n  // 次の問題へ進む\n  const handleNextQuestion = () => {\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  // カテゴリー選択画面に戻る\n  const handleBackToCategorySelect = () => {\n    setSelectedCategory(null);\n    setSelectedSubcategory(null);\n    setQuestions([]);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(false);\n    setShowRanking(false);\n    setAnswerHistory([]);\n  };\n\n  // サブカテゴリー選択画面を削除し、カテゴリー選択画面のみ表示\n  if (!selectedCategory && !isQuizKingMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30AF\\u30A4\\u30BA\\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-king-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u30AF\\u30A4\\u30BA\\u738B\\u30C1\\u30E3\\u30EC\\u30F3\\u30B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u5168\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u304B\\u308930\\u554F\\u306E\\u30E9\\u30F3\\u30C0\\u30E0\\u554F\\u984C\\u306B\\u6311\\u6226\\uFF01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startQuizKingChallenge,\n            className: \"quiz-king-button\",\n            children: \"\\u30AF\\u30A4\\u30BA\\u738B\\u306B\\u6311\\u6226\\u3059\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-grid\",\n            children: Object.entries(quizData.categories).map(([key, category]) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedCategory(key),\n              className: \"category-button\",\n              children: category.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  }\n\n  // データが読み込まれていない場合のローディング表示\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u554F\\u984C\\u3092\\u8AAD\\u307F\\u8FBC\\u3093\\u3067\\u3044\\u307E\\u3059...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this);\n  }\n\n  // クイズ画面\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u30AF\\u30A4\\u30BA\", isQuizKingMode ? \"王チャレンジ\" : \"\", \"\\u7D42\\u4E86\\uFF01\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-text\",\n        children: [\"\\u3042\\u306A\\u305F\\u306E\\u30B9\\u30B3\\u30A2\\u306F \", score, \" / \", questions.length, \" \\u3067\\u3059\", isQuizKingMode && score >= 25 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-king-achievement\",\n          children: \"\\uD83C\\uDFC6 \\u304A\\u3081\\u3067\\u3068\\u3046\\uFF01\\u3042\\u306A\\u305F\\u306F\\u30AF\\u30A4\\u30BA\\u738B\\u306E\\u79F0\\u53F7\\u3092\\u7372\\u5F97\\u3057\\u307E\\u3057\\u305F\\uFF01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-history-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u56DE\\u7B54\\u5C65\\u6B74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-history-list\",\n          children: answerHistory.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `answer-history-item ${answer.isCorrect ? 'correct' : 'incorrect'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-history-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-number\",\n                children: [\"\\u554F\\u984C \", answer.questionNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"category-level\",\n                children: [answer.category, \" - \", answer.subcategoryName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question\",\n              children: answer.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-answer\",\n                children: [\"\\u3042\\u306A\\u305F\\u306E\\u56DE\\u7B54: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: answer.isCorrect ? 'correct-text' : 'incorrect-text',\n                  children: answer.selectedAnswer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), !answer.isCorrect && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"correct-answer\",\n                children: [\"\\u6B63\\u89E3: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"correct-text\",\n                  children: answer.correctAnswer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), !showRanking ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u3042\\u306A\\u305F\\u306E\\u540D\\u524D\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          className: \"name-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveScore,\n          className: \"save-score-button\",\n          disabled: !playerName.trim(),\n          children: \"\\u30B9\\u30B3\\u30A2\\u3092\\u4FDD\\u5B58\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ranking-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u30E9\\u30F3\\u30AD\\u30F3\\u30B0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ranking-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `ranking-tab ${!isQuizKingMode ? 'active' : ''}`,\n            onClick: () => setIsQuizKingMode(false),\n            children: \"\\u901A\\u5E38\\u30E2\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `ranking-tab ${isQuizKingMode ? 'active' : ''}`,\n            onClick: () => setIsQuizKingMode(true),\n            children: \"\\u30AF\\u30A4\\u30BA\\u738B\\u30E2\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ranking-list\",\n          children: [rankings[isQuizKingMode ? 'quizKing' : 'normal'].map((rank, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ranking-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rank-number\",\n              children: [\"#\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-name\",\n              children: rank.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"player-score\",\n              children: [rank.score, \"/\", rank.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rank-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: rank.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: rank.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 19\n          }, this)), rankings[isQuizKingMode ? 'quizKing' : 'normal'].length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-ranking\",\n            children: \"\\u307E\\u3060\\u30E9\\u30F3\\u30AD\\u30F3\\u30B0\\u30C7\\u30FC\\u30BF\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToCategorySelect,\n          className: \"back-button\",\n          children: [isQuizKingMode ? \"トップ画面\" : \"カテゴリー選択\", \"\\u306B\\u623B\\u308B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u8CEA\\u554F \", currentQuestionIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), \"/\", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-name\",\n            children: isQuizKingMode ? `${questions[currentQuestionIndex].categoryName} - ${questions[currentQuestionIndex].subcategoryName}` : `${quizData.categories[selectedCategory].name} - ${questions[currentQuestionIndex].subcategoryName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), answerStats[questions[currentQuestionIndex].question] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stats-label\",\n              children: \"\\u6B63\\u7B54\\u7387:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stats-value\",\n              children: [answerStats[questions[currentQuestionIndex].question].percentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stats-total\",\n              children: [\"(\", answerStats[questions[currentQuestionIndex].question].correct, \"/\", answerStats[questions[currentQuestionIndex].question].total, \"\\u56DE\\u6B63\\u89E3)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `feedback ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n          children: feedback.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(option),\n          className: `answer-button ${isAnswered ? option === questions[currentQuestionIndex].correct ? 'correct' : 'incorrect' : ''}`,\n          disabled: isAnswered,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), isAnswered && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          className: \"next-button\",\n          children: currentQuestionIndex === questions.length - 1 ? '結果を見る' : '次の問題へ'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizApp, \"MuVYGslkGwRfTy71/CKaMEU53Qo=\");\n_c = QuizApp;\nexport default QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["React","useState","useEffect","quizData","jsxDEV","_jsxDEV","Fragment","_Fragment","shuffleArray","array","sort","Math","random","getAllQuestions","allQuestions","Object","entries","categories","forEach","categoryKey","category","subcategories","subcategoryKey","subcategory","questionsWithMeta","questions","map","q","categoryName","name","subcategoryName","push","slice","saveScoreToServer","scoreData","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","fetchRankings","mode","QuizApp","_s","selectedCategory","setSelectedCategory","selectedSubcategory","setSelectedSubcategory","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","options","setOptions","setQuestions","feedback","setFeedback","isAnswered","setIsAnswered","isQuizKingMode","setIsQuizKingMode","playerName","setPlayerName","showRanking","setShowRanking","rankings","setRankings","normal","quizKing","answerHistory","setAnswerHistory","answerStats","setAnswerStats","_quizData$categories$","subcategoryQuestions","length","shuffledQuestions","loadRankings","normalRankings","quizKingRankings","fetchAnswerStats","statsMap","stat","question_text","total","total_attempts","correct","correct_attempts","percentage","correct_percentage","saveAnswerStat","question","isCorrect","saveScore","trim","result","updatedRankings","prev","startQuizKingChallenge","currentQuestion","distractors","allOptions","handleAnswerOptionClick","selectedOption","newAnswer","questionNumber","selectedAnswer","correctAnswer","prevScore","message","handleNextQuestion","nextQuestion","handleBackToCategorySelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","key","answer","index","type","placeholder","value","onChange","e","target","disabled","rank","date","option","_c","$RefreshReg$"],"sources":["/Users/tagami/Downloads/quiz-app/src/QuizApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport quizData from './quizData.json';\nimport './styles.css';\n\n// 選択肢をランダムに並べ替える関数\nfunction shuffleArray(array) {\n  return array.sort(() => 0.5 - Math.random());\n}\n\n// 全カテゴリーから問題を取得する関数\nfunction getAllQuestions() {\n  const allQuestions = [];\n  Object.entries(quizData.categories).forEach(([categoryKey, category]) => {\n    Object.entries(category.subcategories).forEach(([subcategoryKey, subcategory]) => {\n      const questionsWithMeta = subcategory.questions.map(q => ({\n        ...q,\n        categoryName: category.name,\n        subcategoryName: subcategory.name\n      }));\n      allQuestions.push(...questionsWithMeta);\n    });\n  });\n  return shuffleArray(allQuestions).slice(0, 30);\n}\n\n// ランキングをサーバーに保存する関数\nconst saveScoreToServer = async (scoreData) => {\n  try {\n    const response = await fetch('http://localhost:3001/api/rankings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(scoreData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング保存エラー:', error);\n    return null;\n  }\n};\n\n// ランキングをサーバーから取得する関数\nconst fetchRankings = async (mode) => {\n  try {\n    const response = await fetch(`http://localhost:3001/api/rankings/${mode}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング取得エラー:', error);\n    return [];\n  }\n};\n\nfunction QuizApp() {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [feedback, setFeedback] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isQuizKingMode, setIsQuizKingMode] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showRanking, setShowRanking] = useState(false);\n  const [rankings, setRankings] = useState({\n    normal: [],\n    quizKing: []\n  });\n  const [answerHistory, setAnswerHistory] = useState([]);\n  const [answerStats, setAnswerStats] = useState({});\n\n  // サブカテゴリーが選択されたときに問題を設定\n  useEffect(() => {\n    if (selectedCategory && selectedSubcategory && \n        quizData.categories[selectedCategory]?.subcategories[selectedSubcategory]) {\n      try {\n        const subcategoryQuestions = quizData.categories[selectedCategory]\n          .subcategories[selectedSubcategory].questions;\n        if (subcategoryQuestions && subcategoryQuestions.length > 0) {\n          const shuffledQuestions = shuffleArray([...subcategoryQuestions]).slice(0, 10);\n          setQuestions(shuffledQuestions);\n          setCurrentQuestionIndex(0);\n          setScore(0);\n          setShowScore(false);\n          setFeedback(null);\n          setIsAnswered(false);\n          setIsQuizKingMode(false);\n        } else {\n          console.error('選択されたサブカテゴリーに問題がありません');\n        }\n      } catch (error) {\n        console.error('問題データの読み込みエラー:', error);\n      }\n    }\n  }, [selectedCategory, selectedSubcategory]);\n\n  // ランキングデータを読み込む\n  useEffect(() => {\n    const loadRankings = async () => {\n      const normalRankings = await fetchRankings('normal');\n      const quizKingRankings = await fetchRankings('quizKing');\n      setRankings({\n        normal: normalRankings,\n        quizKing: quizKingRankings\n      });\n    };\n    loadRankings();\n  }, [showRanking]);\n\n  // 問題の正答率を取得\n  const fetchAnswerStats = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/answer-stats');\n      const data = await response.json();\n      const statsMap = {};\n      data.forEach(stat => {\n        statsMap[stat.question_text] = {\n          total: stat.total_attempts,\n          correct: stat.correct_attempts,\n          percentage: stat.correct_percentage\n        };\n      });\n      setAnswerStats(statsMap);\n    } catch (error) {\n      console.error('正答率取得エラー:', error);\n    }\n  };\n\n  // コンポーネントマウント時に正答率を取得\n  useEffect(() => {\n    fetchAnswerStats();\n  }, []);\n\n  // 回答データを保存\n  const saveAnswerStat = async (question, isCorrect) => {\n    try {\n      await fetch('http://localhost:3001/api/answer-stats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          category: isQuizKingMode ? questions[currentQuestionIndex].categoryName : quizData.categories[selectedCategory].name,\n          subcategory: questions[currentQuestionIndex].subcategoryName,\n          question: question,\n          isCorrect: isCorrect\n        })\n      });\n      // 正答率を再取得\n      fetchAnswerStats();\n    } catch (error) {\n      console.error('回答統計保存エラー:', error);\n    }\n  };\n\n  // スコアを保存する関数\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n\n    const scoreData = {\n      name: playerName,\n      score: score,\n      total: questions.length,\n      category: isQuizKingMode ? 'クイズ王チャレンジ' : quizData.categories[selectedCategory].name,\n      mode: isQuizKingMode ? 'quizKing' : 'normal'\n    };\n\n    const result = await saveScoreToServer(scoreData);\n    if (result) {\n      const updatedRankings = await fetchRankings(isQuizKingMode ? 'quizKing' : 'normal');\n      setRankings(prev => ({\n        ...prev,\n        [isQuizKingMode ? 'quizKing' : 'normal']: updatedRankings\n      }));\n      setShowRanking(true);\n    }\n  };\n\n  // クイズ王チャレンジモード開始\n  const startQuizKingChallenge = () => {\n    const allQuestions = getAllQuestions();\n    setQuestions(allQuestions);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(true);\n  };\n\n  // 問題が切り替わるたびに選択肢の順序をシャッフル\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const currentQuestion = questions[currentQuestionIndex];\n      if (currentQuestion && currentQuestion.correct && currentQuestion.distractors) {\n        const allOptions = shuffleArray([currentQuestion.correct, ...currentQuestion.distractors]);\n        setOptions(allOptions);\n        setFeedback(null);\n        setIsAnswered(false);\n      }\n    }\n  }, [currentQuestionIndex, questions]);\n\n  // 回答ボタンをクリックしたときの処理\n  const handleAnswerOptionClick = async (selectedOption) => {\n    if (!questions[currentQuestionIndex] || isAnswered) return;\n\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = selectedOption === currentQuestion.correct;\n    \n    // 回答データを保存\n    await saveAnswerStat(currentQuestion.question, isCorrect);\n    \n    // 回答履歴に追加\n    const newAnswer = {\n      questionNumber: currentQuestionIndex + 1,\n      question: currentQuestion.question,\n      selectedAnswer: selectedOption,\n      correctAnswer: currentQuestion.correct,\n      isCorrect: isCorrect,\n      category: isQuizKingMode ? currentQuestion.categoryName : quizData.categories[selectedCategory].name,\n      subcategoryName: currentQuestion.subcategoryName\n    };\n    setAnswerHistory(prev => [...prev, newAnswer]);\n    \n    if (isCorrect) {\n      setScore(prevScore => prevScore + 1);\n      setFeedback({\n        isCorrect: true,\n        message: '正解！'\n      });\n    } else {\n      setFeedback({\n        isCorrect: false,\n        message: `不正解... 正解は「${currentQuestion.correct}」です。`\n      });\n    }\n    setIsAnswered(true);\n  };\n\n  // 次の問題へ進む\n  const handleNextQuestion = () => {\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  // カテゴリー選択画面に戻る\n  const handleBackToCategorySelect = () => {\n    setSelectedCategory(null);\n    setSelectedSubcategory(null);\n    setQuestions([]);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(false);\n    setShowRanking(false);\n    setAnswerHistory([]);\n  };\n\n  // サブカテゴリー選択画面を削除し、カテゴリー選択画面のみ表示\n  if (!selectedCategory && !isQuizKingMode) {\n    return (\n      <div className=\"app\">\n        <h1>クイズアプリ</h1>\n        <div className=\"category-selection\">\n          <div className=\"quiz-king-section\">\n            <h2>クイズ王チャレンジ</h2>\n            <p>全カテゴリーから30問のランダム問題に挑戦！</p>\n            <button\n              onClick={startQuizKingChallenge}\n              className=\"quiz-king-button\"\n            >\n              クイズ王に挑戦する\n            </button>\n          </div>\n          <div className=\"category-section\">\n            <h2>カテゴリーを選択してください</h2>\n            <div className=\"category-grid\">\n              {Object.entries(quizData.categories).map(([key, category]) => (\n                <button\n                  key={key}\n                  onClick={() => setSelectedCategory(key)}\n                  className=\"category-button\"\n                >\n                  {category.name}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // データが読み込まれていない場合のローディング表示\n  if (questions.length === 0) {\n    return (\n      <div className=\"app\">\n        <div className=\"loading\">\n          <h2>問題を読み込んでいます...</h2>\n        </div>\n      </div>\n    );\n  }\n\n  // クイズ画面\n  return (\n    <div className=\"app\">\n      {showScore ? (\n        <div className=\"score-section\">\n          <h2>クイズ{isQuizKingMode ? \"王チャレンジ\" : \"\"}終了！</h2>\n          <div className=\"score-text\">\n            あなたのスコアは {score} / {questions.length} です\n            {isQuizKingMode && score >= 25 && (\n              <div className=\"quiz-king-achievement\">\n                🏆 おめでとう！あなたはクイズ王の称号を獲得しました！\n              </div>\n            )}\n          </div>\n          \n          <div className=\"answer-history-section\">\n            <h3>回答履歴</h3>\n            <div className=\"answer-history-list\">\n              {answerHistory.map((answer, index) => (\n                <div key={index} className={`answer-history-item ${answer.isCorrect ? 'correct' : 'incorrect'}`}>\n                  <div className=\"answer-history-header\">\n                    <span className=\"question-number\">問題 {answer.questionNumber}</span>\n                    <span className=\"category-level\">{answer.category} - {answer.subcategoryName}</span>\n                  </div>\n                  <div className=\"question\">{answer.question}</div>\n                  <div className=\"answer-details\">\n                    <div className=\"selected-answer\">\n                      あなたの回答: <span className={answer.isCorrect ? 'correct-text' : 'incorrect-text'}>\n                        {answer.selectedAnswer}\n                      </span>\n                    </div>\n                    {!answer.isCorrect && (\n                      <div className=\"correct-answer\">\n                        正解: <span className=\"correct-text\">{answer.correctAnswer}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {!showRanking ? (\n            <div className=\"name-input-section\">\n              <input\n                type=\"text\"\n                placeholder=\"あなたの名前を入力してください\"\n                value={playerName}\n                onChange={(e) => setPlayerName(e.target.value)}\n                className=\"name-input\"\n              />\n              <button\n                onClick={saveScore}\n                className=\"save-score-button\"\n                disabled={!playerName.trim()}\n              >\n                スコアを保存\n              </button>\n            </div>\n          ) : (\n            <div className=\"ranking-section\">\n              <h3>ランキング</h3>\n              <div className=\"ranking-tabs\">\n                <button\n                  className={`ranking-tab ${!isQuizKingMode ? 'active' : ''}`}\n                  onClick={() => setIsQuizKingMode(false)}\n                >\n                  通常モード\n                </button>\n                <button\n                  className={`ranking-tab ${isQuizKingMode ? 'active' : ''}`}\n                  onClick={() => setIsQuizKingMode(true)}\n                >\n                  クイズ王モード\n                </button>\n              </div>\n              <div className=\"ranking-list\">\n                {rankings[isQuizKingMode ? 'quizKing' : 'normal'].map((rank, index) => (\n                  <div key={index} className=\"ranking-item\">\n                    <span className=\"rank-number\">#{index + 1}</span>\n                    <span className=\"player-name\">{rank.name}</span>\n                    <span className=\"player-score\">{rank.score}/{rank.total}</span>\n                    <div className=\"rank-details\">\n                      <span>{rank.category}</span>\n                      <span>{rank.date}</span>\n                    </div>\n                  </div>\n                ))}\n                {rankings[isQuizKingMode ? 'quizKing' : 'normal'].length === 0 && (\n                  <div className=\"no-ranking\">\n                    まだランキングデータがありません\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          <div className=\"button-group\">\n            <button\n              onClick={handleBackToCategorySelect}\n              className=\"back-button\"\n            >\n              {isQuizKingMode ? \"トップ画面\" : \"カテゴリー選択\"}に戻る\n            </button>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-header\">\n              <div className=\"question-count\">\n                <span>質問 {currentQuestionIndex + 1}</span>/{questions.length}\n              </div>\n              <div className=\"category-name\">\n                {isQuizKingMode ? \n                  `${questions[currentQuestionIndex].categoryName} - ${questions[currentQuestionIndex].subcategoryName}` :\n                  `${quizData.categories[selectedCategory].name} - ${questions[currentQuestionIndex].subcategoryName}`\n                }\n              </div>\n              {answerStats[questions[currentQuestionIndex].question] && (\n                <div className=\"answer-stats\">\n                  <span className=\"stats-label\">正答率:</span>\n                  <span className=\"stats-value\">\n                    {answerStats[questions[currentQuestionIndex].question].percentage}%\n                  </span>\n                  <span className=\"stats-total\">\n                    ({answerStats[questions[currentQuestionIndex].question].correct}/\n                    {answerStats[questions[currentQuestionIndex].question].total}回正解)\n                  </span>\n                </div>\n              )}\n            </div>\n            <div className=\"question-text\">\n              {questions[currentQuestionIndex].question}\n            </div>\n            {feedback && (\n              <div className={`feedback ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n                {feedback.message}\n              </div>\n            )}\n          </div>\n          <div className=\"answer-section\">\n            {options.map((option, index) => (\n              <button \n                key={index} \n                onClick={() => handleAnswerOptionClick(option)}\n                className={`answer-button ${\n                  isAnswered\n                    ? option === questions[currentQuestionIndex].correct\n                      ? 'correct'\n                      : 'incorrect'\n                    : ''\n                }`}\n                disabled={isAnswered}\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n          {isAnswered && (\n            <div className=\"next-button-container\">\n              <button \n                onClick={handleNextQuestion}\n                className=\"next-button\"\n              >\n                {currentQuestionIndex === questions.length - 1 ? '結果を見る' : '次の問題へ'}\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default QuizApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}