{"ast":null,"code":"var _jsxFileName = \"/Users/tagami/Downloads/quiz-app/src/QuizApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport quizData from './quizData.json';\nimport './styles.css';\n\n// 選択肢をランダムに並べ替える関数\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  return array.sort(() => 0.5 - Math.random());\n}\nfunction QuizApp() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n\n  // カテゴリーが選択されたときに問題を設定\n  useEffect(() => {\n    if (selectedCategory) {\n      const categoryQuestions = quizData.categories[selectedCategory].questions;\n      const shuffledQuestions = shuffleArray([...categoryQuestions]).slice(0, 10);\n      setQuestions(shuffledQuestions);\n      setCurrentQuestionIndex(0);\n      setScore(0);\n      setShowScore(false);\n    }\n  }, [selectedCategory]);\n\n  // 問題が切り替わるたびに選択肢の順序をシャッフル\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const currentQuestion = questions[currentQuestionIndex];\n      const allOptions = shuffleArray([currentQuestion.correct, ...currentQuestion.distractors]);\n      setOptions(allOptions);\n    }\n  }, [currentQuestionIndex, questions]);\n\n  // 回答ボタンをクリックしたときの処理\n  const handleAnswerOptionClick = selectedOption => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correct) {\n      setScore(prevScore => prevScore + 1);\n    }\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  // カテゴリー選択画面\n  if (!selectedCategory) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30AF\\u30A4\\u30BA\\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-grid\",\n          children: Object.entries(quizData.categories).map(([key, category]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedCategory(key),\n            className: \"category-button\",\n            children: category.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  // クイズ画面\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30AF\\u30A4\\u30BA\\u7D42\\u4E86\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-text\",\n        children: [\"\\u3042\\u306A\\u305F\\u306E\\u30B9\\u30B3\\u30A2\\u306F \", score, \" / \", questions.length, \" \\u3067\\u3059\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCategory(null),\n        className: \"back-button\",\n        children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u9078\\u629E\\u306B\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u8CEA\\u554F \", currentQuestionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-name\",\n          children: quizData.categories[selectedCategory].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(option),\n          className: \"answer-button\",\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizApp, \"KEVa3pjxAzAAd3TAifwbvMwN6Nw=\");\n_c = QuizApp;\nexport default QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["React","useState","useEffect","quizData","jsxDEV","_jsxDEV","Fragment","_Fragment","shuffleArray","array","sort","Math","random","QuizApp","_s","selectedCategory","setSelectedCategory","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","options","setOptions","questions","setQuestions","categoryQuestions","categories","shuffledQuestions","slice","length","currentQuestion","allOptions","correct","distractors","handleAnswerOptionClick","selectedOption","prevScore","nextQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","category","onClick","name","question","option","index","_c","$RefreshReg$"],"sources":["/Users/tagami/Downloads/quiz-app/src/QuizApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport quizData from './quizData.json';\nimport './styles.css';\n\n// 選択肢をランダムに並べ替える関数\nfunction shuffleArray(array) {\n  return array.sort(() => 0.5 - Math.random());\n}\n\nfunction QuizApp() {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n\n  // カテゴリーが選択されたときに問題を設定\n  useEffect(() => {\n    if (selectedCategory) {\n      const categoryQuestions = quizData.categories[selectedCategory].questions;\n      const shuffledQuestions = shuffleArray([...categoryQuestions]).slice(0, 10);\n      setQuestions(shuffledQuestions);\n      setCurrentQuestionIndex(0);\n      setScore(0);\n      setShowScore(false);\n    }\n  }, [selectedCategory]);\n\n  // 問題が切り替わるたびに選択肢の順序をシャッフル\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const currentQuestion = questions[currentQuestionIndex];\n      const allOptions = shuffleArray([currentQuestion.correct, ...currentQuestion.distractors]);\n      setOptions(allOptions);\n    }\n  }, [currentQuestionIndex, questions]);\n\n  // 回答ボタンをクリックしたときの処理\n  const handleAnswerOptionClick = (selectedOption) => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correct) {\n      setScore(prevScore => prevScore + 1);\n    }\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  // カテゴリー選択画面\n  if (!selectedCategory) {\n    return (\n      <div className=\"app\">\n        <h1>クイズアプリ</h1>\n        <div className=\"category-selection\">\n          <h2>カテゴリーを選択してください</h2>\n          <div className=\"category-grid\">\n            {Object.entries(quizData.categories).map(([key, category]) => (\n              <button\n                key={key}\n                onClick={() => setSelectedCategory(key)}\n                className=\"category-button\"\n              >\n                {category.name}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // クイズ画面\n  return (\n    <div className=\"app\">\n      {showScore ? (\n        <div className=\"score-section\">\n          <h2>クイズ終了！</h2>\n          <div className=\"score-text\">\n            あなたのスコアは {score} / {questions.length} です\n          </div>\n          <button\n            onClick={() => setSelectedCategory(null)}\n            className=\"back-button\"\n          >\n            カテゴリー選択に戻る\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>質問 {currentQuestionIndex + 1}</span>/{questions.length}\n            </div>\n            <div className=\"category-name\">\n              {quizData.categories[selectedCategory].name}\n            </div>\n            <div className=\"question-text\">\n              {questions[currentQuestionIndex].question}\n            </div>\n          </div>\n          <div className=\"answer-section\">\n            {options.map((option, index) => (\n              <button \n                key={index} \n                onClick={() => handleAnswerOptionClick(option)}\n                className=\"answer-button\"\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default QuizApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}