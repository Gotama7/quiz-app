{"ast":null,"code":"var _jsxFileName = \"/Users/tagami/Downloads/quiz-app/src/QuizApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport quizData from './quizData.json';\nimport './styles.css';\n\n// 選択肢をランダムに並べ替える関数\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  return array.sort(() => 0.5 - Math.random());\n}\n\n// 全カテゴリーから問題を取得する関数\nfunction getAllQuestions() {\n  const allQuestions = [];\n  Object.entries(quizData.categories).forEach(([categoryKey, category]) => {\n    Object.entries(category.subcategories).forEach(([subcategoryKey, subcategory]) => {\n      const questionsWithMeta = subcategory.questions.map(q => ({\n        ...q,\n        categoryName: category.name,\n        subcategoryName: subcategory.name\n      }));\n      allQuestions.push(...questionsWithMeta);\n    });\n  });\n  return shuffleArray(allQuestions).slice(0, 30);\n}\n\n// ランキングをサーバーに保存する関数\nconst saveScoreToServer = async scoreData => {\n  try {\n    const response = await fetch('http://localhost:3001/api/rankings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(scoreData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング保存エラー:', error);\n    return null;\n  }\n};\n\n// ランキングをサーバーから取得する関数\nconst fetchRankings = async mode => {\n  try {\n    const response = await fetch(`http://localhost:3001/api/rankings/${mode}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング取得エラー:', error);\n    return [];\n  }\n};\nfunction QuizApp() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [isQuizKingMode, setIsQuizKingMode] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showNameInput, setShowNameInput] = useState(false);\n  const [rankings, setRankings] = useState({\n    normal: [],\n    quizKing: []\n  });\n  const [answerHistory, setAnswerHistory] = useState([]);\n  const [answerStats, setAnswerStats] = useState({});\n\n  // サブカテゴリーが選択されたときに問題を設定\n  useEffect(() => {\n    var _quizData$categories$;\n    if (selectedCategory && selectedSubcategory && (_quizData$categories$ = quizData.categories[selectedCategory]) !== null && _quizData$categories$ !== void 0 && _quizData$categories$.subcategories[selectedSubcategory]) {\n      try {\n        const subcategoryQuestions = quizData.categories[selectedCategory].subcategories[selectedSubcategory].questions;\n        if (subcategoryQuestions && subcategoryQuestions.length > 0) {\n          const shuffledQuestions = shuffleArray([...subcategoryQuestions]).slice(0, 10);\n          setQuestions(shuffledQuestions);\n          setCurrentQuestionIndex(0);\n          setScore(0);\n          setShowScore(false);\n          setFeedback(null);\n          setIsAnswered(false);\n          setIsQuizKingMode(false);\n        } else {\n          console.error('選択されたサブカテゴリーに問題がありません');\n        }\n      } catch (error) {\n        console.error('問題データの読み込みエラー:', error);\n      }\n    }\n  }, [selectedCategory, selectedSubcategory]);\n\n  // ランキングデータを読み込む\n  useEffect(() => {\n    const loadRankings = async () => {\n      const normalRankings = await fetchRankings('normal');\n      const quizKingRankings = await fetchRankings('quizKing');\n      setRankings({\n        normal: normalRankings,\n        quizKing: quizKingRankings\n      });\n    };\n    loadRankings();\n  }, [showScore]);\n\n  // 問題の正答率を取得\n  const fetchAnswerStats = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/answer-stats');\n      const data = await response.json();\n      const statsMap = {};\n      data.forEach(stat => {\n        statsMap[stat.question_text] = {\n          total: stat.total_attempts,\n          correct: stat.correct_attempts,\n          percentage: stat.correct_percentage\n        };\n      });\n      setAnswerStats(statsMap);\n    } catch (error) {\n      console.error('正答率取得エラー:', error);\n    }\n  };\n\n  // コンポーネントマウント時に正答率を取得\n  useEffect(() => {\n    fetchAnswerStats();\n  }, []);\n\n  // 回答データを保存\n  const saveAnswerStat = async (question, isCorrect) => {\n    try {\n      await fetch('http://localhost:3001/api/answer-stats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          category: isQuizKingMode ? questions[currentQuestionIndex].categoryName : quizData.categories[selectedCategory].name,\n          subcategory: questions[currentQuestionIndex].subcategoryName,\n          question: question,\n          isCorrect: isCorrect\n        })\n      });\n      // 正答率を再取得\n      fetchAnswerStats();\n    } catch (error) {\n      console.error('回答統計保存エラー:', error);\n    }\n  };\n\n  // スコアを保存する関数\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n    const scoreData = {\n      name: playerName,\n      score: score,\n      total: questions.length,\n      category: isQuizKingMode ? 'クイズ王チャレンジ' : quizData.categories[selectedCategory].name,\n      mode: isQuizKingMode ? 'quizKing' : 'normal'\n    };\n    const result = await saveScoreToServer(scoreData);\n    if (result) {\n      const updatedRankings = await fetchRankings(isQuizKingMode ? 'quizKing' : 'normal');\n      setRankings(prev => ({\n        ...prev,\n        [isQuizKingMode ? 'quizKing' : 'normal']: updatedRankings\n      }));\n      setShowScore(true);\n    }\n  };\n\n  // クイズ王チャレンジモード開始\n  const startQuizKingChallenge = () => {\n    const allQuestions = getAllQuestions();\n    setQuestions(allQuestions);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(true);\n    setSelectedCategory(null);\n    setSelectedSubcategory(null);\n  };\n\n  // 問題が切り替わるたびに選択肢の順序をシャッフル\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const currentQuestion = questions[currentQuestionIndex];\n      const allOptions = shuffleArray([currentQuestion.correct, currentQuestion.distractor1, currentQuestion.distractor2, currentQuestion.distractor3]);\n      setOptions(allOptions);\n      setShowFeedback(false);\n      setIsAnswered(false);\n    }\n  }, [currentQuestionIndex, questions]);\n\n  // 回答ボタンをクリックしたときの処理\n  const handleAnswerOptionClick = async selectedOption => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = selectedOption === currentQuestion.correct;\n\n    // フィードバックを設定\n    setFeedback({\n      isCorrect,\n      correctAnswer: currentQuestion.correct,\n      selectedAnswer: selectedOption\n    });\n    setShowFeedback(true);\n\n    // 正解の場合、スコアを加算\n    if (isCorrect) {\n      setScore(prevScore => prevScore + 1);\n    }\n\n    // 回答統計を保存\n    try {\n      await saveAnswerStat(currentQuestion.question, isCorrect);\n    } catch (error) {\n      console.error('回答統計の保存に失敗:', error);\n    }\n\n    // 回答履歴に追加\n    const newAnswer = {\n      questionNumber: currentQuestionIndex + 1,\n      question: currentQuestion.question,\n      selectedAnswer: selectedOption,\n      correctAnswer: currentQuestion.correct,\n      isCorrect: isCorrect,\n      category: isQuizKingMode ? currentQuestion.categoryName : quizData.categories[selectedCategory].name,\n      subcategoryName: currentQuestion.subcategoryName\n    };\n    setAnswerHistory(prev => [...prev, newAnswer]);\n\n    // 3秒後に次の問題へ\n    setTimeout(() => {\n      const nextQuestion = currentQuestionIndex + 1;\n      if (nextQuestion < questions.length) {\n        setCurrentQuestionIndex(nextQuestion);\n      } else {\n        if (isQuizKingMode) {\n          setShowNameInput(true);\n        } else {\n          setShowScore(true);\n        }\n      }\n    }, 3000);\n  };\n\n  // プレイヤー名を保存\n  const handleNameSubmit = async () => {\n    try {\n      await saveScore();\n    } catch (error) {\n      console.error('ランキングの保存に失敗:', error);\n    }\n  };\n\n  // カテゴリー選択画面\n  if (!selectedCategory && !isQuizKingMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30AF\\u30A4\\u30BA\\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-grid\",\n          children: Object.entries(quizData.categories).map(([key, category]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedCategory(key),\n            className: \"category-button\",\n            children: category.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-king-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u30AF\\u30A4\\u30BA\\u738B\\u30C1\\u30E3\\u30EC\\u30F3\\u30B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u5168\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u304B\\u3089\\u30E9\\u30F3\\u30C0\\u30E0\\u306B30\\u554F\\u51FA\\u984C\\u3055\\u308C\\u307E\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startQuizKingChallenge,\n            className: \"quiz-king-button\",\n            children: \"\\u30C1\\u30E3\\u30EC\\u30F3\\u30B8\\u958B\\u59CB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this);\n  }\n\n  // サブカテゴリー選択画面\n  if (selectedCategory && !selectedSubcategory && !isQuizKingMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30B5\\u30D6\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subcategory-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subcategory-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const categoryQuestions = quizData.categories[selectedCategory].questions || [];\n              if (categoryQuestions.length > 0) {\n                const shuffledQuestions = shuffleArray([...categoryQuestions]).slice(0, 10);\n                setQuestions(shuffledQuestions);\n                setCurrentQuestionIndex(0);\n                setScore(0);\n                setShowScore(false);\n              }\n            },\n            className: \"subcategory-button\",\n            children: \"\\u5168\\u30B5\\u30D6\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u304B\\u3089\\u51FA\\u984C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), Object.entries(quizData.categories[selectedCategory].subcategories).map(([key, subcategory]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSelectedSubcategory(key);\n              const subcategoryQuestions = subcategory.questions;\n              const shuffledQuestions = shuffleArray([...subcategoryQuestions]).slice(0, 10);\n              setQuestions(shuffledQuestions);\n              setCurrentQuestionIndex(0);\n              setScore(0);\n              setShowScore(false);\n            },\n            className: \"subcategory-button\",\n            children: subcategory.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedCategory(null),\n          className: \"back-button\",\n          children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u9078\\u629E\\u306B\\u623B\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this);\n  }\n\n  // プレイヤー名入力画面\n  if (showNameInput) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u30AF\\u30A4\\u30BA\\u738B\\u30C1\\u30E3\\u30EC\\u30F3\\u30B8\\u7D42\\u4E86\\uFF01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u30B9\\u30B3\\u30A2: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value),\n            placeholder: \"\\u3042\\u306A\\u305F\\u306E\\u540D\\u524D\\u3092\\u5165\\u529B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNameSubmit,\n            children: \"\\u7D50\\u679C\\u3092\\u4FDD\\u5B58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this);\n  }\n\n  // スコア表示画面\n  if (showScore) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u30AF\\u30A4\\u30BA\\u7D42\\u4E86\\uFF01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-text\",\n          children: [\"\\u3042\\u306A\\u305F\\u306E\\u30B9\\u30B3\\u30A2\\u306F \", score, \" / \", questions.length, \" \\u3067\\u3059\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSelectedCategory(null);\n            setSelectedSubcategory(null);\n            setIsQuizKingMode(false);\n          },\n          className: \"back-button\",\n          children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u9078\\u629E\\u306B\\u623B\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this);\n  }\n\n  // クイズ画面\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u8CEA\\u554F \", currentQuestionIndex + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-info\",\n        children: isQuizKingMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-name\",\n            children: quizData.categories[questions[currentQuestionIndex].category].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subcategory-name\",\n            children: quizData.categories[questions[currentQuestionIndex].category].subcategories[questions[currentQuestionIndex].subcategory].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-name\",\n            children: quizData.categories[selectedCategory].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), selectedSubcategory && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subcategory-name\",\n            children: quizData.categories[selectedCategory].subcategories[selectedSubcategory].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-section\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerOptionClick(option),\n        className: `answer-button ${isAnswered ? option === questions[currentQuestionIndex].correct ? 'correct' : option === (feedback === null || feedback === void 0 ? void 0 : feedback.selectedAnswer) ? 'incorrect' : '' : ''}`,\n        disabled: isAnswered,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `feedback ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n      children: feedback.isCorrect ? '正解！' : `不正解... 正解は ${feedback.correctAnswer} です`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizApp, \"y5qJLnkMswVM1TdZ+8Iz+puaIyM=\");\n_c = QuizApp;\nexport default QuizApp;\nvar _c;\n$RefreshReg$(_c, \"QuizApp\");","map":{"version":3,"names":["React","useState","useEffect","quizData","jsxDEV","_jsxDEV","shuffleArray","array","sort","Math","random","getAllQuestions","allQuestions","Object","entries","categories","forEach","categoryKey","category","subcategories","subcategoryKey","subcategory","questionsWithMeta","questions","map","q","categoryName","name","subcategoryName","push","slice","saveScoreToServer","scoreData","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","fetchRankings","mode","QuizApp","_s","selectedCategory","setSelectedCategory","selectedSubcategory","setSelectedSubcategory","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","options","setOptions","setQuestions","isQuizKingMode","setIsQuizKingMode","showFeedback","setShowFeedback","feedback","setFeedback","isAnswered","setIsAnswered","playerName","setPlayerName","showNameInput","setShowNameInput","rankings","setRankings","normal","quizKing","answerHistory","setAnswerHistory","answerStats","setAnswerStats","_quizData$categories$","subcategoryQuestions","length","shuffledQuestions","loadRankings","normalRankings","quizKingRankings","fetchAnswerStats","statsMap","stat","question_text","total","total_attempts","correct","correct_attempts","percentage","correct_percentage","saveAnswerStat","question","isCorrect","saveScore","trim","result","updatedRankings","prev","startQuizKingChallenge","currentQuestion","allOptions","distractor1","distractor2","distractor3","handleAnswerOptionClick","selectedOption","correctAnswer","selectedAnswer","prevScore","newAnswer","questionNumber","setTimeout","nextQuestion","handleNameSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","key","onClick","categoryQuestions","type","value","onChange","e","target","placeholder","option","index","disabled","_c","$RefreshReg$"],"sources":["/Users/tagami/Downloads/quiz-app/src/QuizApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport quizData from './quizData.json';\nimport './styles.css';\n\n// 選択肢をランダムに並べ替える関数\nfunction shuffleArray(array) {\n  return array.sort(() => 0.5 - Math.random());\n}\n\n// 全カテゴリーから問題を取得する関数\nfunction getAllQuestions() {\n  const allQuestions = [];\n  Object.entries(quizData.categories).forEach(([categoryKey, category]) => {\n    Object.entries(category.subcategories).forEach(([subcategoryKey, subcategory]) => {\n      const questionsWithMeta = subcategory.questions.map(q => ({\n        ...q,\n        categoryName: category.name,\n        subcategoryName: subcategory.name\n      }));\n      allQuestions.push(...questionsWithMeta);\n    });\n  });\n  return shuffleArray(allQuestions).slice(0, 30);\n}\n\n// ランキングをサーバーに保存する関数\nconst saveScoreToServer = async (scoreData) => {\n  try {\n    const response = await fetch('http://localhost:3001/api/rankings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(scoreData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング保存エラー:', error);\n    return null;\n  }\n};\n\n// ランキングをサーバーから取得する関数\nconst fetchRankings = async (mode) => {\n  try {\n    const response = await fetch(`http://localhost:3001/api/rankings/${mode}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('ランキング取得エラー:', error);\n    return [];\n  }\n};\n\nfunction QuizApp() {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedSubcategory, setSelectedSubcategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [isQuizKingMode, setIsQuizKingMode] = useState(false);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showNameInput, setShowNameInput] = useState(false);\n  const [rankings, setRankings] = useState({\n    normal: [],\n    quizKing: []\n  });\n  const [answerHistory, setAnswerHistory] = useState([]);\n  const [answerStats, setAnswerStats] = useState({});\n\n  // サブカテゴリーが選択されたときに問題を設定\n  useEffect(() => {\n    if (selectedCategory && selectedSubcategory && \n        quizData.categories[selectedCategory]?.subcategories[selectedSubcategory]) {\n      try {\n        const subcategoryQuestions = quizData.categories[selectedCategory]\n          .subcategories[selectedSubcategory].questions;\n        if (subcategoryQuestions && subcategoryQuestions.length > 0) {\n          const shuffledQuestions = shuffleArray([...subcategoryQuestions]).slice(0, 10);\n          setQuestions(shuffledQuestions);\n          setCurrentQuestionIndex(0);\n          setScore(0);\n          setShowScore(false);\n          setFeedback(null);\n          setIsAnswered(false);\n          setIsQuizKingMode(false);\n        } else {\n          console.error('選択されたサブカテゴリーに問題がありません');\n        }\n      } catch (error) {\n        console.error('問題データの読み込みエラー:', error);\n      }\n    }\n  }, [selectedCategory, selectedSubcategory]);\n\n  // ランキングデータを読み込む\n  useEffect(() => {\n    const loadRankings = async () => {\n      const normalRankings = await fetchRankings('normal');\n      const quizKingRankings = await fetchRankings('quizKing');\n      setRankings({\n        normal: normalRankings,\n        quizKing: quizKingRankings\n      });\n    };\n    loadRankings();\n  }, [showScore]);\n\n  // 問題の正答率を取得\n  const fetchAnswerStats = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/answer-stats');\n      const data = await response.json();\n      const statsMap = {};\n      data.forEach(stat => {\n        statsMap[stat.question_text] = {\n          total: stat.total_attempts,\n          correct: stat.correct_attempts,\n          percentage: stat.correct_percentage\n        };\n      });\n      setAnswerStats(statsMap);\n    } catch (error) {\n      console.error('正答率取得エラー:', error);\n    }\n  };\n\n  // コンポーネントマウント時に正答率を取得\n  useEffect(() => {\n    fetchAnswerStats();\n  }, []);\n\n  // 回答データを保存\n  const saveAnswerStat = async (question, isCorrect) => {\n    try {\n      await fetch('http://localhost:3001/api/answer-stats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          category: isQuizKingMode ? questions[currentQuestionIndex].categoryName : quizData.categories[selectedCategory].name,\n          subcategory: questions[currentQuestionIndex].subcategoryName,\n          question: question,\n          isCorrect: isCorrect\n        })\n      });\n      // 正答率を再取得\n      fetchAnswerStats();\n    } catch (error) {\n      console.error('回答統計保存エラー:', error);\n    }\n  };\n\n  // スコアを保存する関数\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n\n    const scoreData = {\n      name: playerName,\n      score: score,\n      total: questions.length,\n      category: isQuizKingMode ? 'クイズ王チャレンジ' : quizData.categories[selectedCategory].name,\n      mode: isQuizKingMode ? 'quizKing' : 'normal'\n    };\n\n    const result = await saveScoreToServer(scoreData);\n    if (result) {\n      const updatedRankings = await fetchRankings(isQuizKingMode ? 'quizKing' : 'normal');\n      setRankings(prev => ({\n        ...prev,\n        [isQuizKingMode ? 'quizKing' : 'normal']: updatedRankings\n      }));\n      setShowScore(true);\n    }\n  };\n\n  // クイズ王チャレンジモード開始\n  const startQuizKingChallenge = () => {\n    const allQuestions = getAllQuestions();\n    setQuestions(allQuestions);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setFeedback(null);\n    setIsAnswered(false);\n    setIsQuizKingMode(true);\n    setSelectedCategory(null);\n    setSelectedSubcategory(null);\n  };\n\n  // 問題が切り替わるたびに選択肢の順序をシャッフル\n  useEffect(() => {\n    if (questions.length > 0 && currentQuestionIndex < questions.length) {\n      const currentQuestion = questions[currentQuestionIndex];\n      const allOptions = shuffleArray([\n        currentQuestion.correct,\n        currentQuestion.distractor1,\n        currentQuestion.distractor2,\n        currentQuestion.distractor3\n      ]);\n      setOptions(allOptions);\n      setShowFeedback(false);\n      setIsAnswered(false);\n    }\n  }, [currentQuestionIndex, questions]);\n\n  // 回答ボタンをクリックしたときの処理\n  const handleAnswerOptionClick = async (selectedOption) => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = selectedOption === currentQuestion.correct;\n    \n    // フィードバックを設定\n    setFeedback({\n      isCorrect,\n      correctAnswer: currentQuestion.correct,\n      selectedAnswer: selectedOption\n    });\n    setShowFeedback(true);\n\n    // 正解の場合、スコアを加算\n    if (isCorrect) {\n      setScore(prevScore => prevScore + 1);\n    }\n\n    // 回答統計を保存\n    try {\n      await saveAnswerStat(currentQuestion.question, isCorrect);\n    } catch (error) {\n      console.error('回答統計の保存に失敗:', error);\n    }\n\n    // 回答履歴に追加\n    const newAnswer = {\n      questionNumber: currentQuestionIndex + 1,\n      question: currentQuestion.question,\n      selectedAnswer: selectedOption,\n      correctAnswer: currentQuestion.correct,\n      isCorrect: isCorrect,\n      category: isQuizKingMode ? currentQuestion.categoryName : quizData.categories[selectedCategory].name,\n      subcategoryName: currentQuestion.subcategoryName\n    };\n    setAnswerHistory(prev => [...prev, newAnswer]);\n\n    // 3秒後に次の問題へ\n    setTimeout(() => {\n      const nextQuestion = currentQuestionIndex + 1;\n      if (nextQuestion < questions.length) {\n        setCurrentQuestionIndex(nextQuestion);\n      } else {\n        if (isQuizKingMode) {\n          setShowNameInput(true);\n        } else {\n          setShowScore(true);\n        }\n      }\n    }, 3000);\n  };\n\n  // プレイヤー名を保存\n  const handleNameSubmit = async () => {\n    try {\n      await saveScore();\n    } catch (error) {\n      console.error('ランキングの保存に失敗:', error);\n    }\n  };\n\n  // カテゴリー選択画面\n  if (!selectedCategory && !isQuizKingMode) {\n    return (\n      <div className=\"app\">\n        <h1>クイズアプリ</h1>\n        <div className=\"category-selection\">\n          <h2>カテゴリーを選択してください</h2>\n          <div className=\"category-grid\">\n            {Object.entries(quizData.categories).map(([key, category]) => (\n              <button\n                key={key}\n                onClick={() => setSelectedCategory(key)}\n                className=\"category-button\"\n              >\n                {category.name}\n              </button>\n            ))}\n          </div>\n          <div className=\"quiz-king-section\">\n            <h2>クイズ王チャレンジ</h2>\n            <p>全カテゴリーからランダムに30問出題されます</p>\n            <button\n              onClick={startQuizKingChallenge}\n              className=\"quiz-king-button\"\n            >\n              チャレンジ開始\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // サブカテゴリー選択画面\n  if (selectedCategory && !selectedSubcategory && !isQuizKingMode) {\n    return (\n      <div className=\"app\">\n        <h1>サブカテゴリーを選択してください</h1>\n        <div className=\"subcategory-selection\">\n          <div className=\"subcategory-grid\">\n            <button\n              onClick={() => {\n                const categoryQuestions = quizData.categories[selectedCategory].questions || [];\n                if (categoryQuestions.length > 0) {\n                  const shuffledQuestions = shuffleArray([...categoryQuestions]).slice(0, 10);\n                  setQuestions(shuffledQuestions);\n                  setCurrentQuestionIndex(0);\n                  setScore(0);\n                  setShowScore(false);\n                }\n              }}\n              className=\"subcategory-button\"\n            >\n              全サブカテゴリーから出題\n            </button>\n            {Object.entries(quizData.categories[selectedCategory].subcategories).map(([key, subcategory]) => (\n              <button\n                key={key}\n                onClick={() => {\n                  setSelectedSubcategory(key);\n                  const subcategoryQuestions = subcategory.questions;\n                  const shuffledQuestions = shuffleArray([...subcategoryQuestions]).slice(0, 10);\n                  setQuestions(shuffledQuestions);\n                  setCurrentQuestionIndex(0);\n                  setScore(0);\n                  setShowScore(false);\n                }}\n                className=\"subcategory-button\"\n              >\n                {subcategory.name}\n              </button>\n            ))}\n          </div>\n          <button\n            onClick={() => setSelectedCategory(null)}\n            className=\"back-button\"\n          >\n            カテゴリー選択に戻る\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // プレイヤー名入力画面\n  if (showNameInput) {\n    return (\n      <div className=\"app\">\n        <div className=\"name-input-section\">\n          <h2>クイズ王チャレンジ終了！</h2>\n          <p>スコア: {score} / {questions.length}</p>\n          <div className=\"name-input\">\n            <input\n              type=\"text\"\n              value={playerName}\n              onChange={(e) => setPlayerName(e.target.value)}\n              placeholder=\"あなたの名前を入力\"\n            />\n            <button onClick={handleNameSubmit}>結果を保存</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // スコア表示画面\n  if (showScore) {\n    return (\n      <div className=\"app\">\n        <div className=\"score-section\">\n          <h2>クイズ終了！</h2>\n          <div className=\"score-text\">\n            あなたのスコアは {score} / {questions.length} です\n          </div>\n          <button\n            onClick={() => {\n              setSelectedCategory(null);\n              setSelectedSubcategory(null);\n              setIsQuizKingMode(false);\n            }}\n            className=\"back-button\"\n          >\n            カテゴリー選択に戻る\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // クイズ画面\n  return (\n    <div className=\"app\">\n      <div className=\"question-section\">\n        <div className=\"question-count\">\n          <span>質問 {currentQuestionIndex + 1}</span>/{questions.length}\n        </div>\n        <div className=\"category-info\">\n          {isQuizKingMode ? (\n            <div>\n              <div className=\"category-name\">\n                {quizData.categories[questions[currentQuestionIndex].category].name}\n              </div>\n              <div className=\"subcategory-name\">\n                {quizData.categories[questions[currentQuestionIndex].category]\n                  .subcategories[questions[currentQuestionIndex].subcategory].name}\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className=\"category-name\">\n                {quizData.categories[selectedCategory].name}\n              </div>\n              {selectedSubcategory && (\n                <div className=\"subcategory-name\">\n                  {quizData.categories[selectedCategory].subcategories[selectedSubcategory].name}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"question-text\">\n          {questions[currentQuestionIndex].question}\n        </div>\n      </div>\n      <div className=\"answer-section\">\n        {options.map((option, index) => (\n          <button \n            key={index} \n            onClick={() => handleAnswerOptionClick(option)}\n            className={`answer-button ${isAnswered ? (option === questions[currentQuestionIndex].correct ? 'correct' : \n              option === feedback?.selectedAnswer ? 'incorrect' : '') : ''}`}\n            disabled={isAnswered}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n      {showFeedback && (\n        <div className={`feedback ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n          {feedback.isCorrect ? '正解！' : `不正解... 正解は ${feedback.correctAnswer} です`}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QuizApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}